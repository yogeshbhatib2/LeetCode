/*
You are given coins of different denominations and a total amount of money.
Write a function to compute the number of combinations that make up that amount. 
You may assume that you have infinite number of each kind of coin.
*/

class Solution {
    Set<List<Integer>> set= new HashSet<>();
    
    public int change(int amount, int[] coins) {
        
        if(amount==0 )
            return 1;
        getCombination(amount,coins,"",0);       
        
        return set.size() ;
    }   
    
    int getCombination(int amount,int[] coins,String str,int sum){
        if(amount==0){
            return 0;
        }
        
        
        int res=-1;
        for(int i=0;i<coins.length;i++){
            int selectCoin=coins[i];
            if(amount>=selectCoin){ 
                 res=getCombination( amount-selectCoin,coins,str+"/"+selectCoin,sum+selectCoin);
                if(res!=-1){
                    String strA[]=str.split("/");
                    List<Integer> list= new ArrayList<>();
                        for(String s:strA){
                            if(s.length()>0 && s.charAt(0)>='0' &&s.charAt(0)<='9')
                                list.add(Integer.parseInt(s));
                        }
                    list.add(selectCoin);
                    Collections.sort(list);
                    set.add(list);
                }
            }
        }
        
        return -1;
        
        
    }
}
